12-19 22:16:04 jdbc[5]: exception
org.h2.jdbc.JdbcSQLException: Tabelle "PLAY_EVOLUTIONS" nicht gefunden
Table "PLAY_EVOLUTIONS" not found; SQL statement:
select id, hash, apply_script, revert_script, state, last_problem from play_evolutions where state like 'applying_%' [42102-158]
12-19 22:37:14 jdbc[156]: exception
org.h2.jdbc.JdbcSQLException: Feld "AND" nicht gefunden
Column "AND" not found; SQL statement:
select * from recipe where name like ?% and rating >= ? [42122-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:134)
	at org.h2.expression.Operation.optimize(Operation.java:197)
	at org.h2.expression.CompareLike.optimize(CompareLike.java:85)
	at org.h2.command.dml.Select.prepare(Select.java:797)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:415)
	at org.h2.engine.Session.prepareCommand(Session.java:364)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1119)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:71)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at com.jolbox.bonecp.ConnectionHandle.prepareStatement(ConnectionHandle.java:820)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$1.apply(DB.scala:439)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$1.apply(DB.scala:439)
	at play.api.db.AutoCleanConnection.registering(DB.scala:424)
	at play.api.db.AutoCleanConnection.prepareStatement(DB.scala:439)
	at anorm.SimpleSql.getFilledStatement(Anorm.scala:378)
	at anorm.Sql$class.resultSet(Anorm.scala:429)
	at anorm.SimpleSql.resultSet(Anorm.scala:359)
	at anorm.Sql$class.as(Anorm.scala:433)
	at anorm.SimpleSql.as(Anorm.scala:359)
	at models.Recipe$$anonfun$find$1.apply(Recipe.scala:167)
	at models.Recipe$$anonfun$find$1.apply(Recipe.scala:162)
	at play.api.db.DBApi$class.withConnection(DB.scala:79)
	at play.api.db.BoneCPApi.withConnection(DB.scala:273)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at scala.Option.map(Option.scala:133)
	at play.api.db.DB$.withConnection(DB.scala:158)
	at models.Recipe$.find(Recipe.scala:162)
	at controllers.Application$$anonfun$recipes$1$$anonfun$apply$4.apply(Application.scala:43)
	at controllers.Application$$anonfun$recipes$1$$anonfun$apply$4.apply(Application.scala:42)
	at play.api.data.Form$$anonfun$fold$1.apply(Form.scala:122)
	at scala.Option.map(Option.scala:133)
	at play.api.data.Form.fold(Form.scala:122)
	at controllers.Application$$anonfun$recipes$1.apply(Application.scala:40)
	at controllers.Application$$anonfun$recipes$1.apply(Application.scala:39)
	at play.api.mvc.Action$$anon$1.apply(Action.scala:170)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:17)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:125)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:115)
	at akka.actor.Actor$class.apply(Actor.scala:318)
	at play.core.ActionInvoker.apply(Invoker.scala:113)
	at akka.actor.ActorCell.invoke(ActorCell.scala:626)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:197)
	at akka.dispatch.Mailbox.run(Mailbox.scala:179)
	at akka.dispatch.ForkJoinExecutorConfigurator$MailboxExecutionTask.exec(AbstractDispatcher.scala:516)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
12-21 23:48:10 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Datenumwandlungsfehler beim Umwandeln von "name asc"
Data conversion error converting "name asc"; SQL statement:
select * from recipe where ( lower(name) like ? or lower(tags) like ? ) and rating >= ? order by ? [22018-158]
12-21 23:50:44 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Datenumwandlungsfehler beim Umwandeln von "name"
Data conversion error converting "name"; SQL statement:
select * from recipe where ( lower(name) like ? or lower(tags) like ? ) and rating >= ? order by ? [22018-158]
12-21 23:53:25 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Datenumwandlungsfehler beim Umwandeln von "name asc"
Data conversion error converting "name asc"; SQL statement:
select * from recipe where ( lower(name) like ? or lower(tags) like ? ) and rating >= ? order by ? [22018-158]
12-21 23:58:16 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Datenumwandlungsfehler beim Umwandeln von "1 asc"
Data conversion error converting "1 asc"; SQL statement:
select * from recipe where ( lower(name) like ? or lower(tags) like ? ) and rating >= ? order by ? [22018-158]
12-22 00:24:58 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Syntax Fehler in SQL Befehl "SELECT * 				FROM RECIPE R2, ( 				SELECT DISTINCT R.ID 				FROM RECIPE R 					RIGHT JOIN INGREDIENT I  						ON R.ID = I.RECIPEID 				WHERE ( LOWER(R.NAME) LIKE ? OR LOWER(R.TAGS) LIKE ? )  					AND R.RATING >= ?  					AND I.NAME LIKE ? 				) R3 				WHERE R2.ID IN R3[*] 				ORDER BY 2 ASC NULLS FIRST "; erwartet "("
Syntax error in SQL statement "SELECT * 				FROM RECIPE R2, ( 				SELECT DISTINCT R.ID 				FROM RECIPE R 					RIGHT JOIN INGREDIENT I  						ON R.ID = I.RECIPEID 				WHERE ( LOWER(R.NAME) LIKE ? OR LOWER(R.TAGS) LIKE ? )  					AND R.RATING >= ?  					AND I.NAME LIKE ? 				) R3 				WHERE R2.ID IN R3[*] 				ORDER BY 2 ASC NULLS FIRST "; expected "("; SQL statement:
select * 				from recipe r2, ( 				select distinct r.id 				from recipe r 					right join ingredient i  						on r.id = i.recipeId 				where ( lower(r.name) like ? or lower(r.tags) like ? )  					and r.rating >= ?  					and i.name like ? 				) r3 				where r2.id in r3 				order by 2 ASC NULLS FIRST [42001-158]
12-22 00:25:24 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Syntax Fehler in SQL Befehl "SELECT R2.* 				FROM RECIPE R2, ( 				SELECT DISTINCT R.ID 				FROM RECIPE R 					RIGHT JOIN INGREDIENT I  						ON R.ID = I.RECIPEID 				WHERE ( LOWER(R.NAME) LIKE ? OR LOWER(R.TAGS) LIKE ? )  					AND R.RATING >= ?  					AND I.NAME LIKE ? 				) R3 				WHERE R2.ID IN R3[*] 				ORDER BY 2 ASC NULLS FIRST "; erwartet "("
Syntax error in SQL statement "SELECT R2.* 				FROM RECIPE R2, ( 				SELECT DISTINCT R.ID 				FROM RECIPE R 					RIGHT JOIN INGREDIENT I  						ON R.ID = I.RECIPEID 				WHERE ( LOWER(R.NAME) LIKE ? OR LOWER(R.TAGS) LIKE ? )  					AND R.RATING >= ?  					AND I.NAME LIKE ? 				) R3 				WHERE R2.ID IN R3[*] 				ORDER BY 2 ASC NULLS FIRST "; expected "("; SQL statement:
select r2.* 				from recipe r2, ( 				select distinct r.id 				from recipe r 					right join ingredient i  						on r.id = i.recipeId 				where ( lower(r.name) like ? or lower(r.tags) like ? )  					and r.rating >= ?  					and i.name like ? 				) r3 				where r2.id in r3 				order by 2 ASC NULLS FIRST [42001-158]
12-22 00:29:15 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Syntax Fehler in SQL Befehl "SELECT R2.* 				FROM ( 				SELECT DISTINCT R.ID 				FROM RECIPE R 					RIGHT JOIN INGREDIENT I  						ON R.ID = I.RECIPEID 				WHERE ( LOWER(R.NAME) LIKE ? OR LOWER(R.TAGS) LIKE ? )  					AND R.RATING >= ?  					AND I.NAME LIKE ? 				) R3, RECIPE R2 				WHERE R2.ID IN R3[*] 				ORDER BY 2 ASC NULLS FIRST "; erwartet "("
Syntax error in SQL statement "SELECT R2.* 				FROM ( 				SELECT DISTINCT R.ID 				FROM RECIPE R 					RIGHT JOIN INGREDIENT I  						ON R.ID = I.RECIPEID 				WHERE ( LOWER(R.NAME) LIKE ? OR LOWER(R.TAGS) LIKE ? )  					AND R.RATING >= ?  					AND I.NAME LIKE ? 				) R3, RECIPE R2 				WHERE R2.ID IN R3[*] 				ORDER BY 2 ASC NULLS FIRST "; expected "("; SQL statement:
select r2.* 				from ( 				select distinct r.id 				from recipe r 					right join ingredient i  						on r.id = i.recipeId 				where ( lower(r.name) like ? or lower(r.tags) like ? )  					and r.rating >= ?  					and i.name like ? 				) r3, recipe r2 				where r2.id in r3 				order by 2 ASC NULLS FIRST [42001-158]
12-22 00:30:38 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Syntax Fehler in SQL Befehl "SELECT R2.* 				FROM ( 					SELECT DISTINCT R.ID 					FROM RECIPE R 						RIGHT JOIN INGREDIENT I  							ON R.ID = I.RECIPEID 					WHERE ( LOWER(R.NAME) LIKE ? OR LOWER(R.TAGS) LIKE ? )  						AND R.RATING >= ?  						AND I.NAME LIKE ? 				) AS R3, RECIPE R2 				WHERE R2.ID IN R3[*] 				ORDER BY 2 ASC NULLS FIRST "; erwartet "("
Syntax error in SQL statement "SELECT R2.* 				FROM ( 					SELECT DISTINCT R.ID 					FROM RECIPE R 						RIGHT JOIN INGREDIENT I  							ON R.ID = I.RECIPEID 					WHERE ( LOWER(R.NAME) LIKE ? OR LOWER(R.TAGS) LIKE ? )  						AND R.RATING >= ?  						AND I.NAME LIKE ? 				) AS R3, RECIPE R2 				WHERE R2.ID IN R3[*] 				ORDER BY 2 ASC NULLS FIRST "; expected "("; SQL statement:
select r2.* 				from ( 					select distinct r.id 					from recipe r 						right join ingredient i  							on r.id = i.recipeId 					where ( lower(r.name) like ? or lower(r.tags) like ? )  						and r.rating >= ?  						and i.name like ? 				) as r3, recipe r2 				where r2.id in r3 				order by 2 ASC NULLS FIRST [42001-158]
12-22 00:31:31 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Feld "R3" nicht gefunden
Column "R3" not found; SQL statement:
select r2.* 				from recipe r2, ( 					select distinct r.id 					from recipe r 						right join ingredient i  							on r.id = i.recipeId 					where ( lower(r.name) like ? or lower(r.tags) like ? )  						and r.rating >= ?  						and i.name like ? 					) r3 				where r2.id = r3 				order by 2 ASC NULLS FIRST [42122-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:134)
	at org.h2.expression.Comparison.optimize(Comparison.java:156)
	at org.h2.command.dml.Select.prepare(Select.java:797)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:415)
	at org.h2.engine.Session.prepareCommand(Session.java:364)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1119)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:71)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at com.jolbox.bonecp.ConnectionHandle.prepareStatement(ConnectionHandle.java:820)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$1.apply(DB.scala:439)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$1.apply(DB.scala:439)
	at play.api.db.AutoCleanConnection.registering(DB.scala:424)
	at play.api.db.AutoCleanConnection.prepareStatement(DB.scala:439)
	at anorm.SimpleSql.getFilledStatement(Anorm.scala:378)
	at anorm.Sql$class.resultSet(Anorm.scala:429)
	at anorm.SimpleSql.resultSet(Anorm.scala:359)
	at anorm.Sql$class.as(Anorm.scala:433)
	at anorm.SimpleSql.as(Anorm.scala:359)
	at models.Recipe$$anonfun$find$1.apply(Recipe.scala:185)
	at models.Recipe$$anonfun$find$1.apply(Recipe.scala:166)
	at play.api.db.DBApi$class.withConnection(DB.scala:79)
	at play.api.db.BoneCPApi.withConnection(DB.scala:273)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at scala.Option.map(Option.scala:133)
	at play.api.db.DB$.withConnection(DB.scala:158)
	at models.Recipe$.find(Recipe.scala:166)
	at controllers.Application$$anonfun$recipes$1$$anonfun$apply$4.apply(Application.scala:43)
	at controllers.Application$$anonfun$recipes$1$$anonfun$apply$4.apply(Application.scala:42)
	at play.api.data.Form$$anonfun$fold$1.apply(Form.scala:122)
	at scala.Option.map(Option.scala:133)
	at play.api.data.Form.fold(Form.scala:122)
	at controllers.Application$$anonfun$recipes$1.apply(Application.scala:40)
	at controllers.Application$$anonfun$recipes$1.apply(Application.scala:39)
	at play.api.mvc.Action$$anon$1.apply(Action.scala:170)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:17)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:125)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:115)
	at akka.actor.Actor$class.apply(Actor.scala:318)
	at play.core.ActionInvoker.apply(Invoker.scala:113)
	at akka.actor.ActorCell.invoke(ActorCell.scala:626)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:197)
	at akka.dispatch.Mailbox.run(Mailbox.scala:179)
	at akka.dispatch.ForkJoinExecutorConfigurator$MailboxExecutionTask.exec(AbstractDispatcher.scala:516)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
12-29 17:08:47 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Sequenz "RECIPE_ID_SEQ" besteht bereits
Sequence "RECIPE_ID_SEQ" already exists; SQL statement:
CREATE SEQUENCE recipe_id_seq [90035-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:50)
	at org.h2.command.CommandContainer.update(CommandContainer.java:71)
	at org.h2.command.Command.executeUpdate(Command.java:212)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:177)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:152)
	at com.jolbox.bonecp.StatementHandle.execute(StatementHandle.java:300)
	at play.api.db.evolutions.Evolutions$.play$api$db$evolutions$Evolutions$$execute(Evolutions.scala:101)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:224)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:222)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:222)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:197)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.db.evolutions.Evolutions$.applyScript(Evolutions.scala:197)
	at play.api.db.evolutions.OfflineEvolutions$.applyScript(Evolutions.scala:515)
	at play.core.ReloadableApplication.handleWebCommand(ApplicationProvider.scala:175)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch.apply(Exception.scala:88)
	at scala.util.control.Exception$Catch.either(Exception.scala:110)
	at play.core.server.Server$class.getHandlerFor(Server.scala:86)
	at play.core.server.NettyServer.getHandlerFor(NettyServer.scala:38)
	at play.core.server.netty.PlayDefaultUpstreamHandler.messageReceived(PlayDefaultUpstreamHandler.scala:226)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:366)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:568)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:437)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:558)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:91)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.processSelectedKeys(AbstractNioWorker.java:373)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:247)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:35)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:102)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
12-29 17:10:47 jdbc[49]: null
org.h2.message.DbException: Die Datenbank-Verbindung wurde nicht explizit geschlossen (jetzt in der Müllabfuhr)
The connection was not closed by the application and is garbage collected [90018-158]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:174)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:121)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:94)
	at org.h2.Driver.connect(Driver.java:72)
	at play.utils.ProxyDriver.connect(ProxyDriver.scala:9)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:221)
	at com.jolbox.bonecp.BoneCP.obtainRawInternalConnection(BoneCP.java:256)
	at com.jolbox.bonecp.BoneCP.<init>(BoneCP.java:305)
	at com.jolbox.bonecp.BoneCPDataSource.maybeInit(BoneCPDataSource.java:150)
	at com.jolbox.bonecp.BoneCPDataSource.getConnection(BoneCPDataSource.java:112)
	at play.api.db.BoneCPPlugin$$anonfun$onStart$1.apply(DB.scala:242)
	at play.api.db.BoneCPPlugin$$anonfun$onStart$1.apply(DB.scala:240)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.collection.immutable.List.map(List.scala:45)
	at play.api.db.BoneCPPlugin.onStart(DB.scala:240)
	at play.api.Play$$anonfun$start$1.apply(Play.scala:60)
	at play.api.Play$$anonfun$start$1.apply(Play.scala:60)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.Play$.start(Play.scala:60)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3$$anonfun$1.apply(ApplicationProvider.scala:125)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3$$anonfun$1.apply(ApplicationProvider.scala:112)
	at scala.Option.map(Option.scala:133)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3.apply(ApplicationProvider.scala:112)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3.apply(ApplicationProvider.scala:110)
	at scala.Either$RightProjection.flatMap(Either.scala:277)
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:110)
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:110)
	at akka.dispatch.Future$$anon$3.liftedTree1$1(Future.scala:195)
	at akka.dispatch.Future$$anon$3.run(Future.scala:194)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:94)
	at akka.jsr166y.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1381)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: org.h2.jdbc.JdbcSQLException: Die Datenbank-Verbindung wurde nicht explizit geschlossen (jetzt in der Müllabfuhr)
The connection was not closed by the application and is garbage collected [90018-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 44 more
12-29 17:10:49 jdbc[62]: exception
org.h2.jdbc.JdbcSQLException: Sequenz "RECIPE_ID_SEQ" besteht bereits
Sequence "RECIPE_ID_SEQ" already exists; SQL statement:
CREATE SEQUENCE recipe_id_seq [90035-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:50)
	at org.h2.command.CommandContainer.update(CommandContainer.java:71)
	at org.h2.command.Command.executeUpdate(Command.java:212)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:177)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:152)
	at com.jolbox.bonecp.StatementHandle.execute(StatementHandle.java:300)
	at play.api.db.evolutions.Evolutions$.play$api$db$evolutions$Evolutions$$execute(Evolutions.scala:101)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:224)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:222)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:222)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:197)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.db.evolutions.Evolutions$.applyScript(Evolutions.scala:197)
	at play.api.db.evolutions.OfflineEvolutions$.applyScript(Evolutions.scala:515)
	at play.core.ReloadableApplication.handleWebCommand(ApplicationProvider.scala:175)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch.apply(Exception.scala:88)
	at scala.util.control.Exception$Catch.either(Exception.scala:110)
	at play.core.server.Server$class.getHandlerFor(Server.scala:86)
	at play.core.server.NettyServer.getHandlerFor(NettyServer.scala:38)
	at play.core.server.netty.PlayDefaultUpstreamHandler.messageReceived(PlayDefaultUpstreamHandler.scala:226)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:366)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:568)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:437)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:558)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:91)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.processSelectedKeys(AbstractNioWorker.java:373)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:247)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:35)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:102)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
12-29 17:10:53 jdbc[100]: exception
org.h2.jdbc.JdbcSQLException: Sequenz "INGREDIENT_ID_SEQ" besteht bereits
Sequence "INGREDIENT_ID_SEQ" already exists; SQL statement:
CREATE SEQUENCE ingredient_id_seq [90035-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:50)
	at org.h2.command.CommandContainer.update(CommandContainer.java:71)
	at org.h2.command.Command.executeUpdate(Command.java:212)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:177)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:152)
	at com.jolbox.bonecp.StatementHandle.execute(StatementHandle.java:300)
	at play.api.db.evolutions.Evolutions$.play$api$db$evolutions$Evolutions$$execute(Evolutions.scala:101)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:224)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:222)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:222)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:197)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.db.evolutions.Evolutions$.applyScript(Evolutions.scala:197)
	at play.api.db.evolutions.OfflineEvolutions$.applyScript(Evolutions.scala:515)
	at play.core.ReloadableApplication.handleWebCommand(ApplicationProvider.scala:175)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch.apply(Exception.scala:88)
	at scala.util.control.Exception$Catch.either(Exception.scala:110)
	at play.core.server.Server$class.getHandlerFor(Server.scala:86)
	at play.core.server.NettyServer.getHandlerFor(NettyServer.scala:38)
	at play.core.server.netty.PlayDefaultUpstreamHandler.messageReceived(PlayDefaultUpstreamHandler.scala:226)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:366)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:568)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:437)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:558)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:91)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.processSelectedKeys(AbstractNioWorker.java:373)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:247)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:35)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:102)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
12-29 17:10:55 jdbc[123]: java.lang.Exception: Open Stack Trace
	at org.h2.util.CloseWatcher.register(CloseWatcher.java:93)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:122)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:94)
	at org.h2.Driver.connect(Driver.java:72)
	at play.utils.ProxyDriver.connect(ProxyDriver.scala:9)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:221)
	at com.jolbox.bonecp.BoneCP.obtainRawInternalConnection(BoneCP.java:256)
	at com.jolbox.bonecp.ConnectionHandle.obtainInternalConnection(ConnectionHandle.java:211)
	at com.jolbox.bonecp.ConnectionHandle.<init>(ConnectionHandle.java:170)
	at com.jolbox.bonecp.BoneCP.<init>(BoneCP.java:371)
	at com.jolbox.bonecp.BoneCPDataSource.maybeInit(BoneCPDataSource.java:150)
	at com.jolbox.bonecp.BoneCPDataSource.getConnection(BoneCPDataSource.java:112)
	at play.api.db.BoneCPPlugin$$anonfun$onStart$1.apply(DB.scala:242)
	at play.api.db.BoneCPPlugin$$anonfun$onStart$1.apply(DB.scala:240)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.collection.immutable.List.map(List.scala:45)
	at play.api.db.BoneCPPlugin.onStart(DB.scala:240)
	at play.api.Play$$anonfun$start$1.apply(Play.scala:60)
	at play.api.Play$$anonfun$start$1.apply(Play.scala:60)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.Play$.start(Play.scala:60)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3$$anonfun$1.apply(ApplicationProvider.scala:125)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3$$anonfun$1.apply(ApplicationProvider.scala:112)
	at scala.Option.map(Option.scala:133)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3.apply(ApplicationProvider.scala:112)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3.apply(ApplicationProvider.scala:110)
	at scala.Either$RightProjection.flatMap(Either.scala:277)
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:110)
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:110)
	at akka.dispatch.Future$$anon$3.liftedTree1$1(Future.scala:195)
	at akka.dispatch.Future$$anon$3.run(Future.scala:194)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:94)
	at akka.jsr166y.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1381)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)

org.h2.message.DbException: Die Datenbank-Verbindung wurde nicht explizit geschlossen (jetzt in der Müllabfuhr)
The connection was not closed by the application and is garbage collected [90018-158]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:174)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:121)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:94)
	at org.h2.Driver.connect(Driver.java:72)
	at play.utils.ProxyDriver.connect(ProxyDriver.scala:9)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:221)
	at com.jolbox.bonecp.BoneCP.obtainRawInternalConnection(BoneCP.java:256)
	at com.jolbox.bonecp.BoneCP.<init>(BoneCP.java:305)
	at com.jolbox.bonecp.BoneCPDataSource.maybeInit(BoneCPDataSource.java:150)
	at com.jolbox.bonecp.BoneCPDataSource.getConnection(BoneCPDataSource.java:112)
	at play.api.db.BoneCPPlugin$$anonfun$onStart$1.apply(DB.scala:242)
	at play.api.db.BoneCPPlugin$$anonfun$onStart$1.apply(DB.scala:240)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.collection.immutable.List.map(List.scala:45)
	at play.api.db.BoneCPPlugin.onStart(DB.scala:240)
	at play.api.Play$$anonfun$start$1.apply(Play.scala:60)
	at play.api.Play$$anonfun$start$1.apply(Play.scala:60)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.Play$.start(Play.scala:60)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3$$anonfun$1.apply(ApplicationProvider.scala:125)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3$$anonfun$1.apply(ApplicationProvider.scala:112)
	at scala.Option.map(Option.scala:133)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3.apply(ApplicationProvider.scala:112)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3.apply(ApplicationProvider.scala:110)
	at scala.Either$RightProjection.flatMap(Either.scala:277)
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:110)
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:110)
	at akka.dispatch.Future$$anon$3.liftedTree1$1(Future.scala:195)
	at akka.dispatch.Future$$anon$3.run(Future.scala:194)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:94)
	at akka.jsr166y.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1381)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: org.h2.jdbc.JdbcSQLException: Die Datenbank-Verbindung wurde nicht explizit geschlossen (jetzt in der Müllabfuhr)
The connection was not closed by the application and is garbage collected [90018-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 44 more
12-29 17:10:57 jdbc[136]: exception
org.h2.jdbc.JdbcSQLException: Sequenz "PREPARATION_STEP_ID_SEQ" besteht bereits
Sequence "PREPARATION_STEP_ID_SEQ" already exists; SQL statement:
CREATE SEQUENCE preparation_step_id_seq [90035-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:50)
	at org.h2.command.CommandContainer.update(CommandContainer.java:71)
	at org.h2.command.Command.executeUpdate(Command.java:212)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:177)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:152)
	at com.jolbox.bonecp.StatementHandle.execute(StatementHandle.java:300)
	at play.api.db.evolutions.Evolutions$.play$api$db$evolutions$Evolutions$$execute(Evolutions.scala:101)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:224)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:222)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:222)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:197)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.db.evolutions.Evolutions$.applyScript(Evolutions.scala:197)
	at play.api.db.evolutions.OfflineEvolutions$.applyScript(Evolutions.scala:515)
	at play.core.ReloadableApplication.handleWebCommand(ApplicationProvider.scala:175)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch.apply(Exception.scala:88)
	at scala.util.control.Exception$Catch.either(Exception.scala:110)
	at play.core.server.Server$class.getHandlerFor(Server.scala:86)
	at play.core.server.NettyServer.getHandlerFor(NettyServer.scala:38)
	at play.core.server.netty.PlayDefaultUpstreamHandler.messageReceived(PlayDefaultUpstreamHandler.scala:226)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:366)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:568)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:437)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:558)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:91)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.processSelectedKeys(AbstractNioWorker.java:373)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:247)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:35)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:102)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
01-07 21:59:05 jdbc[9]: exception
org.h2.jdbc.JdbcSQLException: Tabelle "DATE" nicht gefunden
Table "DATE" not found; SQL statement:
delete from date where id = ? [42102-158]
01-11 00:44:11 jdbc[14]: exception
org.h2.jdbc.JdbcSQLException: Feld "Lieblingsessen" nicht gefunden
Column "Lieblingsessen" not found; SQL statement:
INSERT INTO tag (name) VALUES ("Lieblingsessen")
INSERT INTO tag (name) VALUES ("vegetarisch")
INSERT INTO tag (name) VALUES ("warme Speise")
INSERT INTO tag (name) VALUES ("kalte Speise")
INSERT INTO tag (name) VALUES ("Salat")
INSERT INTO tag (name) VALUES ("Suppe") [42122-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:134)
	at org.h2.command.dml.Insert.prepare(Insert.java:231)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:415)
	at org.h2.engine.Session.prepareCommand(Session.java:364)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1119)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:164)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:152)
	at com.jolbox.bonecp.StatementHandle.execute(StatementHandle.java:300)
	at play.api.db.evolutions.Evolutions$.play$api$db$evolutions$Evolutions$$execute(Evolutions.scala:101)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:224)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:222)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:222)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:197)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.db.evolutions.Evolutions$.applyScript(Evolutions.scala:197)
	at play.api.db.evolutions.OfflineEvolutions$.applyScript(Evolutions.scala:515)
	at play.core.ReloadableApplication.handleWebCommand(ApplicationProvider.scala:175)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch.apply(Exception.scala:88)
	at scala.util.control.Exception$Catch.either(Exception.scala:110)
	at play.core.server.Server$class.getHandlerFor(Server.scala:86)
	at play.core.server.NettyServer.getHandlerFor(NettyServer.scala:38)
	at play.core.server.netty.PlayDefaultUpstreamHandler.messageReceived(PlayDefaultUpstreamHandler.scala:226)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:366)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:568)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:437)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:558)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:91)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.processSelectedKeys(AbstractNioWorker.java:373)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:247)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:35)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:102)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
01-11 00:47:06 jdbc[73]: exception
org.h2.jdbc.JdbcSQLException: Sequenz "TAG_ID_SEQ" besteht bereits
Sequence "TAG_ID_SEQ" already exists; SQL statement:
CREATE SEQUENCE tag_id_seq [90035-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.command.ddl.CreateSequence.update(CreateSequence.java:50)
	at org.h2.command.CommandContainer.update(CommandContainer.java:71)
	at org.h2.command.Command.executeUpdate(Command.java:212)
	at org.h2.jdbc.JdbcStatement.executeInternal(JdbcStatement.java:177)
	at org.h2.jdbc.JdbcStatement.execute(JdbcStatement.java:152)
	at com.jolbox.bonecp.StatementHandle.execute(StatementHandle.java:300)
	at play.api.db.evolutions.Evolutions$.play$api$db$evolutions$Evolutions$$execute(Evolutions.scala:101)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:224)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1$$anonfun$apply$3.apply(Evolutions.scala:222)
	at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
	at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:222)
	at play.api.db.evolutions.Evolutions$$anonfun$applyScript$1.apply(Evolutions.scala:197)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.db.evolutions.Evolutions$.applyScript(Evolutions.scala:197)
	at play.api.db.evolutions.OfflineEvolutions$.applyScript(Evolutions.scala:515)
	at play.core.ReloadableApplication.handleWebCommand(ApplicationProvider.scala:175)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at play.core.server.Server$$anonfun$getHandlerFor$1.apply(Server.scala:86)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch$$anonfun$either$1.apply(Exception.scala:110)
	at scala.util.control.Exception$Catch.apply(Exception.scala:88)
	at scala.util.control.Exception$Catch.either(Exception.scala:110)
	at play.core.server.Server$class.getHandlerFor(Server.scala:86)
	at play.core.server.NettyServer.getHandlerFor(NettyServer.scala:38)
	at play.core.server.netty.PlayDefaultUpstreamHandler.messageReceived(PlayDefaultUpstreamHandler.scala:226)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:791)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:296)
	at org.jboss.netty.handler.codec.frame.FrameDecoder.unfoldAndFireMessageReceived(FrameDecoder.java:366)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.callDecode(ReplayingDecoder.java:568)
	at org.jboss.netty.handler.codec.replay.ReplayingDecoder.messageReceived(ReplayingDecoder.java:437)
	at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:75)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:563)
	at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:558)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:268)
	at org.jboss.netty.channel.Channels.fireMessageReceived(Channels.java:255)
	at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:91)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.processSelectedKeys(AbstractNioWorker.java:373)
	at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:247)
	at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:35)
	at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:102)
	at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
	at java.lang.Thread.run(Thread.java:722)
01-11 00:47:33 jdbc[107]: null
org.h2.message.DbException: Die Datenbank-Verbindung wurde nicht explizit geschlossen (jetzt in der Müllabfuhr)
The connection was not closed by the application and is garbage collected [90018-158]
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.jdbc.JdbcConnection.closeOld(JdbcConnection.java:174)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:121)
	at org.h2.jdbc.JdbcConnection.<init>(JdbcConnection.java:94)
	at org.h2.Driver.connect(Driver.java:72)
	at play.utils.ProxyDriver.connect(ProxyDriver.scala:9)
	at java.sql.DriverManager.getConnection(DriverManager.java:579)
	at java.sql.DriverManager.getConnection(DriverManager.java:221)
	at com.jolbox.bonecp.BoneCP.obtainRawInternalConnection(BoneCP.java:256)
	at com.jolbox.bonecp.BoneCP.<init>(BoneCP.java:305)
	at com.jolbox.bonecp.BoneCPDataSource.maybeInit(BoneCPDataSource.java:150)
	at com.jolbox.bonecp.BoneCPDataSource.getConnection(BoneCPDataSource.java:112)
	at play.api.db.BoneCPPlugin$$anonfun$onStart$1.apply(DB.scala:242)
	at play.api.db.BoneCPPlugin$$anonfun$onStart$1.apply(DB.scala:240)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
	at scala.collection.immutable.List.map(List.scala:45)
	at play.api.db.BoneCPPlugin.onStart(DB.scala:240)
	at play.api.Play$$anonfun$start$1.apply(Play.scala:60)
	at play.api.Play$$anonfun$start$1.apply(Play.scala:60)
	at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)
	at scala.collection.immutable.List.foreach(List.scala:45)
	at play.api.Play$.start(Play.scala:60)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3$$anonfun$1.apply(ApplicationProvider.scala:125)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3$$anonfun$1.apply(ApplicationProvider.scala:112)
	at scala.Option.map(Option.scala:133)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3.apply(ApplicationProvider.scala:112)
	at play.core.ReloadableApplication$$anonfun$get$1$$anonfun$apply$3.apply(ApplicationProvider.scala:110)
	at scala.Either$RightProjection.flatMap(Either.scala:277)
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:110)
	at play.core.ReloadableApplication$$anonfun$get$1.apply(ApplicationProvider.scala:110)
	at akka.dispatch.Future$$anon$3.liftedTree1$1(Future.scala:195)
	at akka.dispatch.Future$$anon$3.run(Future.scala:194)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:94)
	at akka.jsr166y.ForkJoinTask$AdaptedRunnableAction.exec(ForkJoinTask.java:1381)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
Caused by: org.h2.jdbc.JdbcSQLException: Die Datenbank-Verbindung wurde nicht explizit geschlossen (jetzt in der Müllabfuhr)
The connection was not closed by the application and is garbage collected [90018-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	... 44 more
01-13 22:51:59 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Sortier-Ausdruck "0" muss in diesem Fall im Resultat vorkommen
Order by expression "0" must be in the result list in this case; SQL statement:
select name from tag order by 0 asc [90068-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.command.dml.Query.prepareOrder(Query.java:430)
	at org.h2.command.dml.Select.prepare(Select.java:789)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:415)
	at org.h2.engine.Session.prepareCommand(Session.java:364)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1119)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:71)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at com.jolbox.bonecp.ConnectionHandle.prepareStatement(ConnectionHandle.java:820)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$1.apply(DB.scala:439)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$1.apply(DB.scala:439)
	at play.api.db.AutoCleanConnection.registering(DB.scala:424)
	at play.api.db.AutoCleanConnection.prepareStatement(DB.scala:439)
	at anorm.SimpleSql.getFilledStatement(Anorm.scala:378)
	at anorm.SqlQuery.getFilledStatement(Anorm.scala:462)
	at anorm.Sql$class.resultSet(Anorm.scala:429)
	at anorm.SqlQuery.resultSet(Anorm.scala:459)
	at anorm.Sql$class.as(Anorm.scala:433)
	at anorm.SqlQuery.as(Anorm.scala:459)
	at models.Tag$$anonfun$tagNames$1.apply(Tag.scala:24)
	at models.Tag$$anonfun$tagNames$1.apply(Tag.scala:23)
	at play.api.db.DBApi$class.withConnection(DB.scala:79)
	at play.api.db.BoneCPApi.withConnection(DB.scala:273)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at scala.Option.map(Option.scala:133)
	at play.api.db.DB$.withConnection(DB.scala:158)
	at models.Tag$.tagNames(Tag.scala:23)
	at controllers.Application$$anonfun$showNewRecipe$1.apply(Application.scala:63)
	at controllers.Application$$anonfun$showNewRecipe$1.apply(Application.scala:62)
	at play.api.mvc.Action$$anonfun$apply$4.apply(Action.scala:204)
	at play.api.mvc.Action$$anonfun$apply$4.apply(Action.scala:204)
	at play.api.mvc.Action$$anon$1.apply(Action.scala:170)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:17)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:125)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:115)
	at akka.actor.Actor$class.apply(Actor.scala:318)
	at play.core.ActionInvoker.apply(Invoker.scala:113)
	at akka.actor.ActorCell.invoke(ActorCell.scala:626)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:197)
	at akka.dispatch.Mailbox.run(Mailbox.scala:179)
	at akka.dispatch.ForkJoinExecutorConfigurator$MailboxExecutionTask.exec(AbstractDispatcher.scala:516)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
01-13 22:52:14 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Sortier-Ausdruck "2" muss in diesem Fall im Resultat vorkommen
Order by expression "2" must be in the result list in this case; SQL statement:
select name from tag order by 2 asc [90068-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.command.dml.Query.prepareOrder(Query.java:430)
	at org.h2.command.dml.Select.prepare(Select.java:789)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:415)
	at org.h2.engine.Session.prepareCommand(Session.java:364)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1119)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:71)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at com.jolbox.bonecp.ConnectionHandle.prepareStatement(ConnectionHandle.java:820)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$1.apply(DB.scala:439)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$1.apply(DB.scala:439)
	at play.api.db.AutoCleanConnection.registering(DB.scala:424)
	at play.api.db.AutoCleanConnection.prepareStatement(DB.scala:439)
	at anorm.SimpleSql.getFilledStatement(Anorm.scala:378)
	at anorm.SqlQuery.getFilledStatement(Anorm.scala:462)
	at anorm.Sql$class.resultSet(Anorm.scala:429)
	at anorm.SqlQuery.resultSet(Anorm.scala:459)
	at anorm.Sql$class.as(Anorm.scala:433)
	at anorm.SqlQuery.as(Anorm.scala:459)
	at models.Tag$$anonfun$tagNames$1.apply(Tag.scala:24)
	at models.Tag$$anonfun$tagNames$1.apply(Tag.scala:23)
	at play.api.db.DBApi$class.withConnection(DB.scala:79)
	at play.api.db.BoneCPApi.withConnection(DB.scala:273)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at scala.Option.map(Option.scala:133)
	at play.api.db.DB$.withConnection(DB.scala:158)
	at models.Tag$.tagNames(Tag.scala:23)
	at controllers.Application$$anonfun$showNewRecipe$1.apply(Application.scala:63)
	at controllers.Application$$anonfun$showNewRecipe$1.apply(Application.scala:62)
	at play.api.mvc.Action$$anonfun$apply$4.apply(Action.scala:204)
	at play.api.mvc.Action$$anonfun$apply$4.apply(Action.scala:204)
	at play.api.mvc.Action$$anon$1.apply(Action.scala:170)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:17)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:125)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:115)
	at akka.actor.Actor$class.apply(Actor.scala:318)
	at play.core.ActionInvoker.apply(Invoker.scala:113)
	at akka.actor.ActorCell.invoke(ActorCell.scala:626)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:197)
	at akka.dispatch.Mailbox.run(Mailbox.scala:179)
	at akka.dispatch.ForkJoinExecutorConfigurator$MailboxExecutionTask.exec(AbstractDispatcher.scala:516)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
01-13 22:54:37 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Syntax Fehler in SQL Befehl "select name from tag order by [*]'name asc"
Syntax error in SQL statement "select name from tag order by [*]'name asc"; SQL statement:
select name from tag order by 'name asc [42000-158]
01-13 22:56:44 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Anzahl der Felder stimmt nicht überein
Column count does not match; SQL statement:
insert into recipe (name,rating,imageRef, tags) values (?, ?, ?) [21002-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.command.dml.Insert.prepare(Insert.java:226)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:415)
	at org.h2.engine.Session.prepareCommand(Session.java:364)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1119)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:71)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1049)
	at com.jolbox.bonecp.ConnectionHandle.prepareStatement(ConnectionHandle.java:858)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$2.apply(DB.scala:440)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$2.apply(DB.scala:440)
	at play.api.db.AutoCleanConnection.registering(DB.scala:424)
	at play.api.db.AutoCleanConnection.prepareStatement(DB.scala:440)
	at anorm.SimpleSql.getFilledStatement(Anorm.scala:377)
	at anorm.Sql$class.execute1(Anorm.scala:446)
	at anorm.SimpleSql.execute1(Anorm.scala:359)
	at anorm.Sql$class.executeInsert(Anorm.scala:454)
	at anorm.SimpleSql.executeInsert(Anorm.scala:359)
	at models.Recipe$$anonfun$create$1.apply(Recipe.scala:33)
	at models.Recipe$$anonfun$create$1.apply(Recipe.scala:28)
	at play.api.db.DBApi$class.withConnection(DB.scala:79)
	at play.api.db.BoneCPApi.withConnection(DB.scala:273)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at scala.Option.map(Option.scala:133)
	at play.api.db.DB$.withConnection(DB.scala:158)
	at models.Recipe$.create(Recipe.scala:28)
	at controllers.Application$$anonfun$createRecipe$1$$anonfun$apply$8.apply(Application.scala:125)
	at controllers.Application$$anonfun$createRecipe$1$$anonfun$apply$8.apply(Application.scala:124)
	at play.api.data.Form$$anonfun$fold$1.apply(Form.scala:122)
	at scala.Option.map(Option.scala:133)
	at play.api.data.Form.fold(Form.scala:122)
	at controllers.Application$$anonfun$createRecipe$1.apply(Application.scala:119)
	at controllers.Application$$anonfun$createRecipe$1.apply(Application.scala:118)
	at play.api.mvc.Action$$anon$1.apply(Action.scala:170)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:17)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:125)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:115)
	at akka.actor.Actor$class.apply(Actor.scala:318)
	at play.core.ActionInvoker.apply(Invoker.scala:113)
	at akka.actor.ActorCell.invoke(ActorCell.scala:626)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:197)
	at akka.dispatch.Mailbox.run(Mailbox.scala:179)
	at akka.dispatch.ForkJoinExecutorConfigurator$MailboxExecutionTask.exec(AbstractDispatcher.scala:516)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
01-13 22:56:44 jdbc[2]: exception
org.h2.jdbc.JdbcSQLException: Anzahl der Felder stimmt nicht überein
Column count does not match; SQL statement:
insert into recipe (name,rating,imageRef, tags) values (?, ?, ?) [21002-158]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	at org.h2.message.DbException.get(DbException.java:169)
	at org.h2.message.DbException.get(DbException.java:146)
	at org.h2.message.DbException.get(DbException.java:135)
	at org.h2.command.dml.Insert.prepare(Insert.java:226)
	at org.h2.command.Parser.prepareCommand(Parser.java:218)
	at org.h2.engine.Session.prepareLocal(Session.java:415)
	at org.h2.engine.Session.prepareCommand(Session.java:364)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1119)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:71)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:267)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:1049)
	at com.jolbox.bonecp.ConnectionHandle.prepareStatement(ConnectionHandle.java:858)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$2.apply(DB.scala:440)
	at play.api.db.AutoCleanConnection$$anonfun$prepareStatement$2.apply(DB.scala:440)
	at play.api.db.AutoCleanConnection.registering(DB.scala:424)
	at play.api.db.AutoCleanConnection.prepareStatement(DB.scala:440)
	at anorm.SimpleSql.getFilledStatement(Anorm.scala:377)
	at anorm.Sql$class.execute1(Anorm.scala:446)
	at anorm.SimpleSql.execute1(Anorm.scala:359)
	at anorm.Sql$class.executeInsert(Anorm.scala:454)
	at anorm.SimpleSql.executeInsert(Anorm.scala:359)
	at models.Recipe$$anonfun$create$1.apply(Recipe.scala:33)
	at models.Recipe$$anonfun$create$1.apply(Recipe.scala:28)
	at play.api.db.DBApi$class.withConnection(DB.scala:79)
	at play.api.db.BoneCPApi.withConnection(DB.scala:273)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at play.api.db.DB$$anonfun$withConnection$3.apply(DB.scala:158)
	at scala.Option.map(Option.scala:133)
	at play.api.db.DB$.withConnection(DB.scala:158)
	at models.Recipe$.create(Recipe.scala:28)
	at controllers.Application$$anonfun$createRecipe$1$$anonfun$apply$8.apply(Application.scala:125)
	at controllers.Application$$anonfun$createRecipe$1$$anonfun$apply$8.apply(Application.scala:124)
	at play.api.data.Form$$anonfun$fold$1.apply(Form.scala:122)
	at scala.Option.map(Option.scala:133)
	at play.api.data.Form.fold(Form.scala:122)
	at controllers.Application$$anonfun$createRecipe$1.apply(Application.scala:119)
	at controllers.Application$$anonfun$createRecipe$1.apply(Application.scala:118)
	at play.api.mvc.Action$$anon$1.apply(Action.scala:170)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.core.ActionInvoker$$anonfun$receive$1$$anonfun$6.apply(Invoker.scala:126)
	at play.utils.Threads$.withContextClassLoader(Threads.scala:17)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:125)
	at play.core.ActionInvoker$$anonfun$receive$1.apply(Invoker.scala:115)
	at akka.actor.Actor$class.apply(Actor.scala:318)
	at play.core.ActionInvoker.apply(Invoker.scala:113)
	at akka.actor.ActorCell.invoke(ActorCell.scala:626)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:197)
	at akka.dispatch.Mailbox.run(Mailbox.scala:179)
	at akka.dispatch.ForkJoinExecutorConfigurator$MailboxExecutionTask.exec(AbstractDispatcher.scala:516)
	at akka.jsr166y.ForkJoinTask.doExec(ForkJoinTask.java:259)
	at akka.jsr166y.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:975)
	at akka.jsr166y.ForkJoinPool.runWorker(ForkJoinPool.java:1479)
	at akka.jsr166y.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:104)
01-16 22:22:21 jdbc[6]: exception
org.h2.jdbc.JdbcSQLException: Syntax Fehler in SQL Befehl "SELECT R2.* 				FROM RECIPE R2, ( 					SELECT DISTINCT R.ID 					FROM RECIPE R 						LEFT INNER[*] JOIN INGREDIENT I  							ON R.ID = I.RECIPEID 					WHERE LOWER(R.NAME) LIKE ? 						AND R.RATING >= ?  						AND (I.NAME IS NULL OR LOWER(I.NAME) LIKE ?) 						AND (? = 0 OR ? IN ( 								SELECT RT.TAGID 								FROM RECIPE_TAG RT 								WHERE R.ID = RT.RECIPEID 								) 							) 					) R3 				WHERE R2.ID = R3.ID 				ORDER BY 2 ASC NULLS FIRST "; erwartet "OUTER, JOIN"
Syntax error in SQL statement "SELECT R2.* 				FROM RECIPE R2, ( 					SELECT DISTINCT R.ID 					FROM RECIPE R 						LEFT INNER[*] JOIN INGREDIENT I  							ON R.ID = I.RECIPEID 					WHERE LOWER(R.NAME) LIKE ? 						AND R.RATING >= ?  						AND (I.NAME IS NULL OR LOWER(I.NAME) LIKE ?) 						AND (? = 0 OR ? IN ( 								SELECT RT.TAGID 								FROM RECIPE_TAG RT 								WHERE R.ID = RT.RECIPEID 								) 							) 					) R3 				WHERE R2.ID = R3.ID 				ORDER BY 2 ASC NULLS FIRST "; expected "OUTER, JOIN"; SQL statement:
select r2.* 				from recipe r2, ( 					select distinct r.id 					from recipe r 						left inner join ingredient i  							on r.id = i.recipeId 					where lower(r.name) like ? 						and r.rating >= ?  						and (i.name is null or lower(i.name) like ?) 						and (? = 0 or ? in ( 								select rt.tagId 								from recipe_tag rt 								where r.id = rt.recipeId 								) 							) 					) r3 				where r2.id = r3.id 				order by 2 ASC NULLS FIRST [42001-158]
